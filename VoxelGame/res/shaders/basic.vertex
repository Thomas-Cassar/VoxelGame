#version 460 core  

layout(location=0) in vec3 in_position;
layout(location=1) in vec3 in_normal;
layout(location=2) in vec3 in_vColor;

out vec3 verColor;

uniform mat4 u_MVP;

uniform vec3 lightDirection;
uniform vec3 lightColor;
uniform vec2 lightBias;

//Lighting Reference:
//https://github.com/TheThinMatrix/LowPolyTerrain/blob/master/src/flatTerrain/terrainVertex.glsl
vec3 calculateLighting()
{
	float brightness = max(dot(-lightDirection, in_normal), 0.0);
	return (lightColor*lightBias.x)+(brightness*lightColor*lightBias.y);
};

 void main()  
 {  
 gl_Position = u_MVP * vec4(in_position,1.0);  

 vec3 lighting =calculateLighting();
 verColor = in_vColor.rgb *lighting;
 };
